@page "/authors/update/{Id}"

@inject IAuthorRepository _repo
@inject NavigationManager _navManager


<h3>Update Current Author</h3>
<hr />

@if (!_isSuccessful)
{
    <ErrorMessage Message="Error! Something went wrong with the current operation." />
}

@if (Model == null)
{
    <LoadingPrompt Message="Loading Author Data for Updating..." />
}
else
{
    <EditForm Model="Model" OnValidSubmit="UpdateAuthor">
        
        <DataAnnotationsValidator />
        
        <ValidationSummary />
        
        <div class="form-group">
            <label for="firstName">First Name</label>
            <InputText @bind-Value="@Model.FirstName" class="form-control" id="firstName" />
        </div>
        <div class="form-group">
            <label for="lastName">Last Name</label>
            <InputText @bind-Value="@Model.LastName" class="form-control" id="lastName" />
        </div>
        <div class="form-group">
            <label for="bio">Biography</label>
            <InputTextArea @bind-Value="@Model.Bio" class="form-control" id="bio" />
        </div>

        <button class="btn btn-success" type="submit">
            <span class="oi oi-pencil"></span>
            Submit Changes
        </button>

        <button @onclick="BackToList" class="btn btn-outline-secondary">
            <span class="oi oi-media-skip-backward"></span>
            Back to List
        </button>
    </EditForm>
}



@code {
    [Parameter]
    public string Id { get; set; }

    public Author Model = new Author();

    private bool _isSuccessful = true;

    protected override async Task OnInitializedAsync()
    {
        var id = Convert.ToInt32(Id);
        Model = await _repo.GetSingle(Endpoints.AuthorsEndpoint, id);
    }

    private async Task UpdateAuthor()
    {
        _isSuccessful = await _repo.Update(Endpoints.AuthorsEndpoint, Model, Model.Id);

        if(_isSuccessful)
        {
            BackToList();
        }
        else
        {
            _isSuccessful = false;
        }
    }

    public void BackToList()
    {
        _navManager.NavigateTo("/authors/");
    }
}
