@page "/authors"

@inject IAuthorRepository _repo

<h3>Authors List</h3>

<hr />

<a href="/authors/create/" class="btn btn-primary p-2 m-2">
    <span class="oi oi-pencil"></span>
    Add An Author
</a>

<SearchComponent OnSearch="HandleSearch" />

<br/>

@if (authors == null)
{
    <LoadingPrompt Message="Loading Author list..." />
}
else
{
    <table class="table table-striped">
        <thead class="thead-dark">
            <tr>
                <th scope="col">First Name</th>
                <th scope="col">Last Name</th>
                <th scope="col">Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (authors.Count() > 0 && authors != null)
            {
            <Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize Items="authors" Context="author">
                <AuthorListBaseComponent author="author" />
            </Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize>
            }
            else
            {
                <tr>
                    <td colspan="3">Cannot find any authors</td>
                </tr>
            }

        </tbody>
    </table>
}

@code {
    private IList<Author> authors;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        authors = await _repo.GetAll(Endpoints.AuthorsEndpoint);
        StateHasChanged();
    }

    private async Task HandleSearch(string search)
    {
        authors = await _repo.GetBySearch(Endpoints.AuthorsEndpoint, search);
    }
}
