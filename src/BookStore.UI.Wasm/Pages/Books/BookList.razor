@page "/books"

@inject IBookRepository _repo

<h3>Book List</h3>

<hr />

<a href="/books/create/" class="btn btn-primary p-2 m-2">
    <span class="oi oi-pencil"></span>
    Add A Book
</a>

<SearchComponent OnSearch="HandleSearch" />

<br />

@if (books == null)
{
    <LoadingPrompt Message="Loading Book list" />
}
else
{
    <table class="table table-striped">
        <thead class="thead-dark">
            <tr>
                <th scope="col">Title</th>
                <th scope="col">Year</th>
                <th scope="col">Price</th>
                <th scope="col">ISBN</th>
                <th scope="col">Author</th>
                <th scope="col">Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (books.Count > 0 && books != null)
            {
                @foreach (var book in books)
                {
                    <BookListBaseComponent book="book" />
                }
            }
            else
            {
                <tr>
                    <td colspan="3">Cannot find any books</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private IList<Book> books;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        books = await _repo.GetAll(Endpoints.BooksEndpoint);
    }

    private async Task HandleSearch(string search)
    {
        books = await _repo.GetBySearch(Endpoints.BooksEndpoint, search);
    }
}