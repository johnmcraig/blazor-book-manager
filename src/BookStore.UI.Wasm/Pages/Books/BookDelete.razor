@page "/books/delete/{Id:int}"

@inject IBookRepository _repo
@inject NavigationManager _navManager
@inject IToastService _toastService

<h3>Delete Book</h3>

@if (!_isSuccessful)
{
    <ErrorMessage Message="Something Went Wrong With the Operation" />
}

@if (Id < 1 || string.IsNullOrWhiteSpace(_model.Title))
{
    <ErrorMessage Message="Invalid Selection. Please Try Again" />
}
else if (_model == null)
{
    <LoadingPrompt Message="Loading Book Details" />
}
else
{
    <div class="col-md-4">
        <table class="table table-responsive">
            <tr>
                <td>Title</td>
                <td>@_model.Title</td>
            </tr>
            <tr>
                <td>Year</td>
                <td>@_model.Year</td>
            </tr>
            <tr>
                <td>ISBN</td>
                <td>@_model.Isbn</td>
            </tr>
            <tr>
                @if (_model.Author == null)
                {
                    <td class="alert alert-dismissible alert-secondary">
                        No Authors for this record
                    </td>
                }
                else
                {
                    <td>Author</td>
                    <td>@_model.Author.FirstName @_model.Author.LastName</td>
                }
                </tr> 
        </table>
    </div>
}
<br/>

<button @onclick="DeleteBook" class="btn btn-danger">
    <span class="oi oi-delete"></span>
    Delete book
</button>

<button @onclick="BackToList" class="btn btn-outline-secondary">
    <span class="oi oi-media-skip-backward"></span>
    Back to List
</button>

@code {
    [Parameter]
    public int Id { get; set; }
    
    private Book _model = new Book();

    private bool _isSuccessful = true;

    protected override async Task OnInitializedAsync()
    {
        _model = await _repo.GetSingle(Endpoints.BooksEndpoint, Id);
    }

    private async Task DeleteBook()
    {
        _isSuccessful = await _repo.Delete(Endpoints.BooksEndpoint, _model.Id);
        if (_isSuccessful)
        {
            _toastService.ShowSuccess($"Successfully Deleted Book Record: Id:{_model.Id} Title:{_model.Title}");
            BackToList();
        }
        else
        {
            _toastService.ShowError("An Error Occurred During the Operation!");
        }
    }
    
    private void BackToList()
    {
        _navManager.NavigateTo("/books/");
    }
}